import pandas as pd
import joblib
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

data = pd.read_csv('data/Housing Price Dataset.csv')

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
data['mainroad'] = le.fit_transform(data['mainroad'])
data['guestroom'] = le.fit_transform(data['guestroom'])
data['basement'] = le.fit_transform(data['basement'])
data['hotwaterheating'] = le.fit_transform(data['hotwaterheating'])
data['airconditioning'] = le.fit_transform(data['airconditioning'])
data['prefarea'] = le.fit_transform(data['prefarea'])
data['furnishingstatus'] = le.fit_transform(data['furnishingstatus'])

X = data.drop(columns=['price'])
y = data['price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

svm_model = joblib.load('models/svm_model.joblib')
rf_model = joblib.load('models/rf_model.joblib')

svm_predictions = svm_model.predict(X_test)
rf_predictions = rf_model.predict(X_test)

svm_mse = mean_squared_error(y_test, svm_predictions)
rf_mse = mean_squared_error(y_test, rf_predictions)

print(f"Mean Squared Error for SVM: {svm_mse:.2f}")
print(f"Mean Squared Error for Random Forest: {rf_mse:.2f}")

with open('documentation/model_evaluation.txt', 'w') as f:
    f.write(f"SVM Model MSE: {svm_mse:.2f}\n")
    f.write(f"Random Forest Model MSE: {rf_mse:.2f}\n")
